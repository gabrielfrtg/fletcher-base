Bootstrap: docker
From: nvcr.io/nvidia/cuda:12.4.1-devel-ubuntu22.04

%labels
	Maintainer "Fletcher Base Project"
	KokkosVersion "4.3.00"
	Description "Kokkos built with CUDA backend for NVIDIA GPUs"

%help
	This container provides a recent Kokkos build with CUDA support targeting
	NVIDIA GPUs. Use `singularity run --nv kokkos-nvidia.sif` to enter the
	environment with CUDA libraries exposed. Adjust the KOKKOS_VERSION and
	KOKKOS_CUDA_ARCH environment variables when building the container if you
	need a different release or GPU architecture.

	Common NVIDIA GPU architectures for KOKKOS_CUDA_ARCH:
	  PASCAL60  - Tesla P100, Quadro GP100
	  VOLTA70   - Tesla V100, Titan V
	  AMPERE80  - A100, A30 (default)
	  AMPERE86  - RTX 3090, RTX 3080, RTX A6000
	  ADA89     - RTX 4090, RTX 4080, RTX 4070, RTX 4060
	  HOPPER90  - H100, H200, GH200

	Example build command:
	  singularity build --build-arg KOKKOS_CUDA_ARCH=AMPERE86 kokkos-nvidia.sif kokkos-nvidia.def

%post
	set -ex

	export DEBIAN_FRONTEND=noninteractive
	apt-get update
	apt-get install -y --no-install-recommends \
		build-essential \
		ca-certificates \
		cmake \
		curl \
		gfortran \
		git \
		gnupg \
		libopenmpi-dev \
		ninja-build \
		pkg-config \
		python3 \
		python3-pip \
		python3-setuptools \
		wget
	rm -rf /var/lib/apt/lists/*

	# Build and install Kokkos from the latest tagged release.
	export KOKKOS_VERSION="${KOKKOS_VERSION:-4.3.00}"
	export KOKKOS_CUDA_ARCH="${KOKKOS_CUDA_ARCH:-AMPERE80}"
	export KOKKOS_SOURCE_DIR="/tmp/kokkos-${KOKKOS_VERSION}"
	export KOKKOS_BUILD_DIR="${KOKKOS_SOURCE_DIR}/build"
	export KOKKOS_INSTALL_DIR="/opt/kokkos/${KOKKOS_VERSION}"

	mkdir -p "${KOKKOS_SOURCE_DIR}" "${KOKKOS_BUILD_DIR}" "${KOKKOS_INSTALL_DIR}"

	if ! git clone --branch "${KOKKOS_VERSION}" --depth 1 https://github.com/kokkos/kokkos.git "${KOKKOS_SOURCE_DIR}"; then
		rm -rf "${KOKKOS_SOURCE_DIR}"
		mkdir -p "${KOKKOS_SOURCE_DIR}"
		curl -sSL "https://github.com/kokkos/kokkos/archive/refs/tags/${KOKKOS_VERSION}.tar.gz" | \
			tar -xz --strip-components=1 -C "${KOKKOS_SOURCE_DIR}"
	fi

	cmake -S "${KOKKOS_SOURCE_DIR}" -B "${KOKKOS_BUILD_DIR}" \
		-G Ninja \
		-DCMAKE_BUILD_TYPE=Release \
		-DCMAKE_C_COMPILER=$(which gcc) \
		-DCMAKE_CXX_COMPILER="${KOKKOS_SOURCE_DIR}/bin/nvcc_wrapper" \
		-DCMAKE_CXX_STANDARD=17 \
		-DCMAKE_INSTALL_PREFIX="${KOKKOS_INSTALL_DIR}" \
		-DKokkos_ENABLE_SERIAL=ON \
		-DKokkos_ENABLE_OPENMP=ON \
		-DKokkos_ENABLE_CUDA=ON \
		-DKokkos_ENABLE_CUDA_LAMBDA=ON \
		-DKokkos_ENABLE_LIBDL=ON \
		-DKokkos_ENABLE_EXAMPLES=OFF \
		-DKokkos_ENABLE_TESTS=OFF \
		-DNVCC_WRAPPER_DEFAULT_COMPILER=$(which g++) \
		-DKokkos_ENABLE_COMPILER_WARNINGS=OFF \
		-DKokkos_ARCH_${KOKKOS_CUDA_ARCH}=ON

	cmake --build "${KOKKOS_BUILD_DIR}" --target install

	# Clean build artifacts to keep image slim.
	rm -rf /tmp/kokkos-

	# Provide a default modulefile-like environment hint.
	cat <<'EOF' >/etc/profile.d/kokkos.sh
export KOKKOS_VERSION=${KOKKOS_VERSION:-4.3.00}
export KOKKOS_ROOT=/opt/kokkos/${KOKKOS_VERSION}
export PATH=${KOKKOS_ROOT}/bin:${PATH}
export LD_LIBRARY_PATH=${KOKKOS_ROOT}/lib:${KOKKOS_ROOT}/lib64:${LD_LIBRARY_PATH}
export CUDA_CACHE_MAXSIZE=2147483648
EOF

%environment
	export KOKKOS_VERSION=${KOKKOS_VERSION:-4.3.00}
	export KOKKOS_ROOT=/opt/kokkos/${KOKKOS_VERSION}
	export PATH=${KOKKOS_ROOT}/bin:${PATH}
	export LD_LIBRARY_PATH=${KOKKOS_ROOT}/lib:${KOKKOS_ROOT}/lib64:${LD_LIBRARY_PATH}

%runscript
	echo "Kokkos ${KOKKOS_VERSION} environment ready."
	echo "Remember to execute with 'singularity run --nv' to expose NVIDIA GPUs."
	exec "$@"
