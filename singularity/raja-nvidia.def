Bootstrap: docker
From: nvcr.io/nvidia/cuda:12.4.1-devel-ubuntu22.04

%labels
	Maintainer "Fletcher Base Project"
	RAJAVersion "2024.07.0"
	Description "RAJA built with CUDA backend for NVIDIA GPUs"

%help
	This container provides a recent RAJA build with CUDA support targeting
	NVIDIA GPUs. Use `singularity run --nv raja-nvidia.sif` to enter the
	environment with CUDA libraries exposed. Adjust the RAJA_VERSION and
	RAJA_CUDA_ARCH build arguments when rebuilding if you need a different
	release or GPU architecture.

	Common NVIDIA GPU architectures:
	- RTX 3090/3080: 86 (Ampere)
	- A100: 80 (Ampere) [default]
	- RTX 4090/4080: 89 (Ada Lovelace)
	- H100: 90 (Hopper)
	- Tesla V100: 70 (Volta)

%post
	set -ex

	export DEBIAN_FRONTEND=noninteractive
	apt-get update
	apt-get install -y --no-install-recommends \
		build-essential \
		ca-certificates \
		curl \
		gfortran \
		git \
		gnupg \
		libopenmpi-dev \
		ninja-build \
		pkg-config \
		python3 \
		python3-pip \
		python3-setuptools \
		wget \
		locales

	# Generate and set locale to fix perl warnings
	locale-gen en_US.UTF-8
	update-locale LANG=en_US.UTF-8 LC_ALL=en_US.UTF-8

	rm -rf /var/lib/apt/lists/*

	# Install newer CMake via pip (RAJA requires CMake >= 3.23)
	pip3 install --no-cache-dir "cmake>=3.23"

	# Build and install RAJA from the latest tagged release.
	export RAJA_VERSION="${RAJA_VERSION:-2024.07.0}"
	export RAJA_CUDA_ARCH="${RAJA_CUDA_ARCH:-75}"
	export RAJA_SOURCE_DIR="/tmp/raja-${RAJA_VERSION}"
	export RAJA_BUILD_DIR="${RAJA_SOURCE_DIR}/build"
	export RAJA_INSTALL_DIR="/opt/raja/${RAJA_VERSION}"

	# Clean up any previous build attempts
	rm -rf "${RAJA_SOURCE_DIR}"

	# Clone RAJA with all submodules (BLT, CAMP, etc.)
	git clone --branch "v${RAJA_VERSION}" --recurse-submodules --shallow-submodules https://github.com/LLNL/RAJA.git "${RAJA_SOURCE_DIR}"

	cmake -S "${RAJA_SOURCE_DIR}" -B "${RAJA_BUILD_DIR}" \
		-G Ninja \
		-DCMAKE_BUILD_TYPE=Release \
		-DCMAKE_C_COMPILER=$(which gcc) \
		-DCMAKE_CXX_COMPILER=$(which g++) \
		-DCMAKE_CUDA_COMPILER=$(which nvcc) \
		-DCMAKE_CXX_STANDARD=17 \
		-DCMAKE_CUDA_STANDARD=17 \
		-DCMAKE_INSTALL_PREFIX="${RAJA_INSTALL_DIR}" \
		-DCMAKE_CUDA_ARCHITECTURES="${RAJA_CUDA_ARCH}" \
		-DRAJA_ENABLE_CUDA=ON \
		-DRAJA_ENABLE_OPENMP=ON \
		-DRAJA_ENABLE_EXAMPLES=OFF \
		-DRAJA_ENABLE_TESTS=OFF \
		-DRAJA_ENABLE_EXERCISES=OFF \
		-DRAJA_ENABLE_DOCUMENTATION=OFF \
		-DENABLE_OPENMP=ON \
		-DENABLE_CUDA=ON

	cmake --build "${RAJA_BUILD_DIR}" --target install

	# Clean build artifacts to keep image slim.
	rm -rf /tmp/raja-*

	# Provide a default modulefile-like environment hint.
	cat <<'EOF' >/etc/profile.d/raja.sh
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8
export RAJA_VERSION=${RAJA_VERSION:-2024.07.0}
export RAJA_ROOT=/opt/raja/${RAJA_VERSION}
export PATH=${RAJA_ROOT}/bin:${PATH}
export LD_LIBRARY_PATH=${RAJA_ROOT}/lib:${RAJA_ROOT}/lib64:${LD_LIBRARY_PATH}
export CUDA_VISIBLE_DEVICES=${CUDA_VISIBLE_DEVICES:-0}
export CUDA_CACHE_MAXSIZE=2147483648
EOF

%environment
	export LANG=en_US.UTF-8
	export LC_ALL=en_US.UTF-8
	export RAJA_VERSION=${RAJA_VERSION:-2024.07.0}
	export RAJA_ROOT=/opt/raja/${RAJA_VERSION}
	export PATH=${RAJA_ROOT}/bin:${PATH}
	export LD_LIBRARY_PATH=${RAJA_ROOT}/lib:${RAJA_ROOT}/lib64:${LD_LIBRARY_PATH}

%runscript
	echo "RAJA ${RAJA_VERSION} environment ready for NVIDIA GPUs."
	echo "Remember to execute with 'singularity run --nv' to expose NVIDIA GPUs."
	exec "$@"
